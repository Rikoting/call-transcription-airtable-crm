{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a data extraction assistant. Extract structured information from the transcript provided.\n\nInstructions:\n- Extract the following fields:\n  - name (string): Caller’s full name. If they say “Hi, this is Samantha Reyes”, extract “Samantha Reyes”. If not stated, return \"Unknown\".\n  - callerType (string): One of “Student”, “Staff”, “Faculty”, “External”.\n  - department (string): Extract department if mentioned (e.g., “Architecture Department”). Otherwise, return \"Unknown\".\n  - email (string): Extract caller’s email. If not found, return \"unknown@example.com\".\n  - phone (string): Extract any phone number mentioned. If none, return an empty string.\n  - project (string): Extract the project name or description if mentioned. If none, return an empty string.\n  - inquiry (string): Summary of what the caller is inquiring about.\n  - actionrequest (string): Full sentence of what the caller is requesting.\n  - actionrequestSummary (string): Short summary version of the action requested.\n  - urgency (string): One of “Urgent”, “Normal”, “Low”, or “Unclear”.\n  - urgencyAnalysis (string): Reasoning why it’s urgent, if stated.\n  - deadline (string): If a deadline or due date is mentioned (e.g., \"by Wednesday\", \"before the end of the week\"), extract that as plain text. Otherwise, return an empty string.\n  - deadlineMissed (string): Set to \"missed\" if the deadline has already passed, otherwise leave blank.\n  - parseStatus (string): Always return \"success\".\n  - - `summary` (string): Write a smart assistant-style summary of the call.\n  - Begin with the caller’s name and role if available\n  - Describe the reason for the call and any urgency or deadlines\n  - Always include any signs of confusion or routing issues (e.g., \"not sure who to contact\", \"hoping to speak with support\")\n  - If urgency isn't stated but intent is clear, still include it\n  - If minimal info is given, still generate a helpful, polite summary based on known fields\n  - Use clear, concise language—as if preparing a CRM note\n  - Try to keep it under 30 words unless extra detail would be valuable\n  - This must never be null\n\n\nOutput format: Valid JSON only. Do not add comments or extra formatting.\n\nTranscript:\n{{ $json[\"text\"] }}\n",
        "hasOutputParser": true,
        "batching": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chainLlm",
      "typeVersion": 1.7,
      "position": [
        -40,
        780
      ],
      "id": "e8a57e09-68d6-4d87-bc51-4f4209bbc97a",
      "name": "Basic LLM Chain"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-3.5-turbo",
          "mode": "list",
          "cachedResultName": "gpt-3.5-turbo"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        -40,
        1000
      ],
      "id": "da3349ed-22e9-4e19-a141-26acff6428f1",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "K0wMf3aspHWfPVnf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const parsed = $json.output || $json;\n\n// Clean + validate email\nconst email = parsed.email?.trim() || \"\";\nconst emailValid = /^[^@]+@[^@]+\\.[^@]+$/.test(email);\n\n// Local timestamp\nconst now = new Date();\nconst timestamp = now.toLocaleString(\"en-PH\", {\n  timeZone: \"Asia/Manila\",\n  year: \"numeric\",\n  month: \"short\",\n  day: \"2-digit\",\n  hour: \"2-digit\",\n  minute: \"2-digit\"\n});\n\n// Deadline Parser\nconst deadlineText = parsed.deadline || \"\";\nlet deadlineDate = null;\nlet deadlineMissed = false;\n\ntry {\n  const ref = deadlineText.toLowerCase().trim();\n  const today = new Date();\n  const weekdays = [\"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\"];\n\n  for (let i = 0; i < 7; i++) {\n    const testDate = new Date();\n    testDate.setDate(today.getDate() + i);\n    if (ref.includes(weekdays[testDate.getDay()])) {\n      deadlineDate = testDate.toISOString().slice(0, 10);\n      if (testDate < today) {\n        deadlineMissed = true;\n      }\n      break;\n    }\n  }\n} catch (_) {}\n\n// Project Auto-Fill Logic\nlet project = parsed.project?.trim();\nif (!project) {\n  const sourceText = `${parsed.actionrequest || \"\"} ${parsed.inquiry || \"\"}`;\n  const match = sourceText.match(/(Urban Design Initiative|Studio Submission|Model Build|Design Critique|Site Plan)/i);\n  project = match ? match[1] : \"General Request\";\n}\n\n// Smart Urgency Analysis Fallback (preserves LLM if present)\nlet urgencyAnalysis = parsed.urgencyAnalysis?.trim();\n\nif (!urgencyAnalysis) {\n  const urgency = parsed.urgency?.toLowerCase();\n  const action = `${parsed.actionrequest || \"\"}`.toLowerCase();\n  const inquiry = `${parsed.inquiry || \"\"}`.toLowerCase();\n\n  if (parsed.deadline) {\n    urgencyAnalysis = \"Deadline mentioned by caller\";\n  } else if (urgency === \"urgent\") {\n    urgencyAnalysis = \"Caller described request as urgent\";\n  } else if (action.includes(\"asap\") || action.includes(\"immediately\") || action.includes(\"soon\")) {\n    urgencyAnalysis = \"Immediate attention requested by caller\";\n  } else if (\n    action.includes(\"follow up\") || action.includes(\"check in\") ||\n    action.includes(\"update\") || inquiry.includes(\"follow up\") ||\n    inquiry.includes(\"progress\") || inquiry.includes(\"waiting\")\n  ) {\n    urgencyAnalysis = \"Caller is seeking an update or follow-up\";\n  } else if (urgency === \"low\") {\n    urgencyAnalysis = \"No urgency or pressure stated\";\n  } else {\n    urgencyAnalysis = \"Unclear urgency level\";\n  }\n}\n\n// Final Output\nreturn {\n  ...parsed,\n  email,\n  emailValid,\n  timestamp,\n  phone: parsed.phone || null,\n  project,\n  urgencyAnalysis,\n  summary: parsed.summary || null,\n  deadlineDate,\n  deadlineMissed,\n  rawTranscript: $node[\"Transcribe a recording *whisper*\"].json.text || null,\n  raw: JSON.stringify(parsed, null, 2)\n};\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        340,
        780
      ],
      "id": "c3c32d08-c1ae-4258-a576-060271e3bdcd",
      "name": "Code1"
    },
    {
      "parameters": {
        "url": "*Enter Download URL Here*",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        -700,
        780
      ],
      "id": "ec19ebe7-683f-4089-b0e5-308c7ebac851",
      "name": "Audio Download/Submit"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -920,
        780
      ],
      "id": "8e902a46-497a-45da-9ceb-969f4b12ddd0",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": false,
            "leftValue": "",
            "typeValidation": "loose",
            "version": 2
          },
          "conditions": [
            {
              "id": "e24973b9-899d-4875-9a6b-852e112b9287",
              "leftValue": "={{$json[\"error\"] || null}}",
              "rightValue": "",
              "operator": {
                "type": "string",
                "operation": "notEmpty",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "looseTypeValidation": true,
        "options": {
          "ignoreCase": true
        }
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        600,
        780
      ],
      "id": "51be7fae-7690-43f3-8de6-a554cb6f627c",
      "name": "If"
    },
    {
      "parameters": {
        "resource": "audio",
        "operation": "transcribe",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.openAi",
      "typeVersion": 1.8,
      "position": [
        -480,
        780
      ],
      "id": "874e4f4b-f979-4530-b87f-dae5ecf8fbfa",
      "name": "Transcribe a recording *whisper*",
      "credentials": {
        "openAiApi": {
          "id": "K0wMf3aspHWfPVnf",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "7639032916",
        "text": "=⚠️ Transcription Error\nFile: {{$json[\"filename\"] || \"Unknown\"}}\nError: {{$json[\"error\"] || \"None\"}}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        860,
        680
      ],
      "id": "2826c6fb-5e5e-4ed2-8f96-27a46982d00a",
      "name": "Alert if parse failed",
      "webhookId": "8aeceb04-00ba-48b2-a627-6643b90ceb7b",
      "credentials": {
        "telegramApi": {
          "id": "L5op42ZhQ6o3s0fv",
          "name": "Telegram account"
        }
      }
    },
    {
      "parameters": {
        "jsonSchemaExample": "{\n  \"name\": \"string\",\n  \"callerType\": \"string\",\n  \"department\": \"string\",\n  \"email\": \"string\",\n  \"phone\": \"string\",\n  \"project\": \"string\",\n  \"inquiry\": \"string\",\n  \"actionrequest\": \"string\",\n  \"actionrequestSummary\": \"string\",\n  \"urgency\": \"string\",\n  \"urgencyAnalysis\": \"string\",\n  \"deadline\": \"string\",\n  \"deadlineMissed\": false,\n  \"emailValid\": true,\n  \"summary\": \"string\"\n}\n"
      },
      "type": "@n8n/n8n-nodes-langchain.outputParserStructured",
      "typeVersion": 1.3,
      "position": [
        120,
        1000
      ],
      "id": "b145345f-687d-447d-ad38-c5293577346a",
      "name": "Structured Output Parser"
    },
    {
      "parameters": {
        "operation": "create",
        "base": {
          "__rl": true,
          "value": "appXpNiN4xZXPi7kr",
          "mode": "list",
          "cachedResultName": "Transcription CRM",
          "cachedResultUrl": "https://airtable.com/appXpNiN4xZXPi7kr"
        },
        "table": {
          "__rl": true,
          "value": "tblNZCdhw7ckSRPtj",
          "mode": "list",
          "cachedResultName": "Transcriptions",
          "cachedResultUrl": "https://airtable.com/appXpNiN4xZXPi7kr/tblNZCdhw7ckSRPtj"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Name": "={{$json[\"name\"]}}",
            "Email": "={{$json[\"email\"]}}",
            "Action Request": "={{ $json.actionrequest }}",
            "Urgency": "={{$json[\"urgency\"]}}",
            "Raw Transcript": "={{ $json.rawTranscript }}",
            "Department": "={{$json[\"department\"]}}",
            "Action Request Summary": "={{ $json.actionrequestSummary }}",
            "Parse Status": "success",
            "Project Reference": "={{ $json.project }}",
            "Phone": "={{ $json.phone }}",
            "Deadline": "={{ $json.deadline }}",
            "Caller Type": "={{ $json.callerType }}",
            "Deadline Missed": "={{ $json.deadlineMissed ? \"MISSED\" : \"FALSE\" }}",
            "Summary": "={{ $json.summary }}",
            "Urgency Analysis": "={{ $json.urgencyAnalysis }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Caller Type",
              "displayName": "Caller Type",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Phone",
              "displayName": "Phone",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Department",
              "displayName": "Department",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Project Reference",
              "displayName": "Project Reference",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Action Request",
              "displayName": "Action Request",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Urgency",
              "displayName": "Urgency",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "Urgent",
                  "value": "Urgent"
                },
                {
                  "name": "Normal",
                  "value": "Normal"
                },
                {
                  "name": "Low",
                  "value": "Low"
                },
                {
                  "name": "Unclear",
                  "value": "Unclear"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Deadline",
              "displayName": "Deadline",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Deadline Missed",
              "displayName": "Deadline Missed",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "MISSED",
                  "value": "MISSED"
                },
                {
                  "name": "FALSE",
                  "value": "FALSE"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Parse Status",
              "displayName": "Parse Status",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "options",
              "options": [
                {
                  "name": "success",
                  "value": "success"
                },
                {
                  "name": "failed",
                  "value": "failed"
                }
              ],
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Raw Transcript",
              "displayName": "Raw Transcript",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Summary",
              "displayName": "Summary",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Action Request Summary",
              "displayName": "Action Request Summary",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Urgency Analysis",
              "displayName": "Urgency Analysis",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": false,
              "removed": false
            },
            {
              "id": "Email Domain",
              "displayName": "Email Domain",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Timestamp",
              "displayName": "Timestamp",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": false
            },
            {
              "id": "Transcript Word Count",
              "displayName": "Transcript Word Count",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "string",
              "readOnly": true,
              "removed": true
            },
            {
              "id": "Email Valid",
              "displayName": "Email Valid",
              "required": false,
              "defaultMatch": false,
              "canBeUsedToMatch": true,
              "display": true,
              "type": "boolean",
              "readOnly": false,
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {
          "typecast": true
        }
      },
      "type": "n8n-nodes-base.airtable",
      "typeVersion": 2.1,
      "position": [
        860,
        900
      ],
      "id": "1cfa4f29-9662-49f0-94c9-48b7a5bdd3fe",
      "name": "Transcription CRM",
      "credentials": {
        "airtableTokenApi": {
          "id": "jISHp2WilDOw8jwf",
          "name": "Airtable Personal Access Token account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ce41d85e-5244-4419-9d06-131a4012bb71",
              "name": "originalTranscript",
              "value": "={{$json.text}}",
              "type": "string"
            },
            {
              "id": "01d5493a-5992-482f-a245-81183877e50b",
              "name": "",
              "value": "",
              "type": "string"
            }
          ]
        },
        "includeOtherFields": true,
        "include": "except",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -280,
        780
      ],
      "id": "89ba4d5c-7d6a-484b-a24a-cb6b17cdbadc",
      "name": "originalTranscript1"
    }
  ],
  "pinData": {},
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Basic LLM Chain": {
      "main": [
        [
          {
            "node": "Code1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Code1": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Audio Download/Submit": {
      "main": [
        [
          {
            "node": "Transcribe a recording *whisper*",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Audio Download/Submit",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Alert if parse failed",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Transcription CRM",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transcribe a recording *whisper*": {
      "main": [
        [
          {
            "node": "originalTranscript1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Structured Output Parser": {
      "ai_outputParser": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "ai_outputParser",
            "index": 0
          }
        ]
      ]
    },
    "originalTranscript1": {
      "main": [
        [
          {
            "node": "Basic LLM Chain",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "d3811c85-4f94-4147-a120-4284773d1a93",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "62c39bdf552bff7845af97d54406ce63938332f1a2eb6ab83d0dea098ce1bafc"
  },
  "id": "qbVQMYap8nJoh4Bl",
  "tags": []
}